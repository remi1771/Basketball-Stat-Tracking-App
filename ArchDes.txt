=class game
    last_action = {}
    action_history = {} # Hay una funcion que tiene que funcar como reloj despues de cada acciÃ³n ponele que actualice algunas cosas, entre otras, esta

=====Screen 1======
    New Game // Load

======Screen 2======
    Input players   (Name,       Number,        Team)
                    Text field,  Number field,  Dropdown
    Button="Done" -> Go to Screen 3

======Screen 3======
    Text="Which player has posession?"
    Select player (Dropdown) -> Go to screen 4  {game.current_player_possession}
    Button="Done"??

======Screen 4 (Main)======
    Text: "The last action was:" {def(message)}. 
    Input text -> codified message quizas hacer un def(coded_action)
    game.last_action = Dribble, Pass=Goto 5, Shoot=Goto 6, Turnover=Goto 7, Foul= Goto 8
    Save

def message(message)
    if last_action == Shoot:
        if contested_type == Blocked:
            message=print(f'{game.blocking_player} {game.shot_type} {game.last_player_possession}'s {game.shot_type} attempt') 
        elif assist_type == Null:
            message=print(f'{game.last_player_possession} {game.shot_made} "a" {game.contested_type} {game.shot_type}'):
        else:
            message=print(f'{game.last_player_possession} {game.shot_made} "a" {game.contested_type} {game.shot_type}. Assist by {game.assisting_player}'):

    elif last_action == Pass:
        message=print(f'{game.last_player_possession} passed to {current_player_possession}')

    elif last_action == Turnover:
        if game.steal == True
            message=print(f'{game.current_player_possession} stole the ball from {game.last_player_possession}')
        message=print(f'{game.last_player_possession} turnover the ball bc he's a fucking retard')
    else message = The game has started!

def messagev2(message)
    if message == 1:  #Fue bloqueado
        message=print(f'{game.blocking_player} {game.shot_type} {game.last_player_possession}'s {game.shot_type} attempt') 
    elif message == 2: #Tiro no bloqueado
        message=print(f'{game.last_player_possession} {game.shot_made} "a" {game.contested_type} {game.shot_type}'):
    elif == 3:
        message=print(f'{game.last_player_possession} {game.shot_made} "a" {game.contested_type} {game.shot_type}. Assist by {game.assisting_player}'):
    elif == 4:
        message=print(f'{game.last_player_possession} passed to {current_player_possession}')
    elif == 5:
        message=print(f'{game.current_player_possession} stole the ball from {game.last_player_possession}')
    elif == 6:
        message=print(f'{game.last_player_possession} turnover the ball bc he's a fucking retard')
    elif == 0:
        message = The game has started!

=====Screen 5 (Pass)=====
    To who was the pass? -> calculate stats n stuff
    Goto 3

=====Screen 6 - Shoot=====
    shot_type(layup, three pointer, two pointer) = <<<Which type of shot was it? (Layup, 2pts, 3pts)>>>
    contested_type = <<<Contested? (Wide Open, Open, Semi Contested, Contested, Heavy Contested, Blocked=Goto 8)>>>
    shot_made(made, missed)= <<<Did it go in? (Yes, No=Goto 8)>>>
    assist_type= <<<Was it assisted? (Yes=Goto 7 No)>>>
    Goto 2

=====Screen 7 (Assisted)=====
    Which player did the assist?
    Goto 2

=====Screen 8 (Rebound)=====
    Who got the rebound?//if defensive player then add +1 to def rebounds and change posession, else +1 off rebound to player
    Goto 3

=====Screen 9 (Turnover)=====
    Steal interception or other? //select player who stole or intercepted
    Goto 3

=====Screen 9 (Foul)=====
    Who made the foul? //if offensive player then add +1 to fouls and turnovers, change possession to none; else +1 def foul
    Goto 2


